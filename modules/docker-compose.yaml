version: '3'

volumes: 
  postgis-data:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  db: 
    image: postgis/postgis:12-2.5-alpine
    volumes: 
      - postgis-data:/var/lib/postgresql/data
    environment: 
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
    ports: 
      - 25432:5432
    restart: on-failure
  location-service:
    image: location-service
    env_file:
      - database.env
      - kafka.env
    restart: on-failure
    depends_on: 
      - db
      - kafka
  location-ingestion-service:
    image: location-ingestion-service
    env_file:
      - database.env
      - grpc.env
      - kafka.env
    restart: on-failure
    depends_on: 
      - db
  udaconnect-api:
    image: udaconnect-api
    env_file: 
      - database.env
      - grpc.env
    ports:
      - 5001:5000
    restart: on-failure
    depends_on: 
      - db
      - location-service
  udaconnect-app:
    image: udaconnect-app
    ports:
      - 3001:3000
    restart: on-failure
